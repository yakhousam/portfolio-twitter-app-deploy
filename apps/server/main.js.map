{"version":3,"file":"main.js","mappings":"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","sources":["webpack://yak-twitter-app/./libs/server/app/src/index.ts","webpack://yak-twitter-app/./libs/server/app/src/lib/server-app.ts","webpack://yak-twitter-app/./libs/server/controllers/twitter-search/src/index.ts","webpack://yak-twitter-app/./libs/server/controllers/twitter-search/src/lib/controllers-twitter-search.ts","webpack://yak-twitter-app/./libs/server/controllers/twitter-search/src/lib/twitter_client.ts","webpack://yak-twitter-app/./libs/server/db/src/index.ts","webpack://yak-twitter-app/./libs/server/db/src/lib/server-db.ts","webpack://yak-twitter-app/./libs/server/middlewares/error/src/index.ts","webpack://yak-twitter-app/./libs/server/middlewares/error/src/lib/middlewares-error.ts","webpack://yak-twitter-app/./libs/server/models/user/src/index.ts","webpack://yak-twitter-app/./libs/server/models/user/src/lib/server-models-user.ts","webpack://yak-twitter-app/./libs/server/passport/src/index.ts","webpack://yak-twitter-app/./libs/server/passport/src/lib/server-passport.ts","webpack://yak-twitter-app/./libs/server/routes/auth/src/index.ts","webpack://yak-twitter-app/./libs/server/routes/auth/src/lib/server-routes-auth.ts","webpack://yak-twitter-app/./libs/server/routes/search/hashtag/src/index.ts","webpack://yak-twitter-app/./libs/server/routes/search/hashtag/src/lib/routes-search-hashtag.ts","webpack://yak-twitter-app/./libs/utility/helpers/src/index.ts","webpack://yak-twitter-app/./libs/utility/helpers/src/lib/utility-helpers.ts","webpack://yak-twitter-app/./libs/utility/tweets/src/index.ts","webpack://yak-twitter-app/./libs/utility/tweets/src/lib/utility-tweets.ts","webpack://yak-twitter-app/external commonjs \"connect-mongodb-session\"","webpack://yak-twitter-app/external commonjs \"dotenv\"","webpack://yak-twitter-app/external commonjs \"express\"","webpack://yak-twitter-app/external commonjs \"express-session\"","webpack://yak-twitter-app/external commonjs \"mongoose\"","webpack://yak-twitter-app/external commonjs \"passport\"","webpack://yak-twitter-app/external commonjs \"passport-twitter\"","webpack://yak-twitter-app/external commonjs \"tslib\"","webpack://yak-twitter-app/external commonjs \"twitter-api-v2\"","webpack://yak-twitter-app/external node-commonjs \"path\"","webpack://yak-twitter-app/webpack/bootstrap","webpack://yak-twitter-app/./apps/server/src/main.ts"],"sourcesContent":["export * from './lib/server-app';\n","import * as path from 'path';\nimport * as express from 'express';\nimport * as dotenv from 'dotenv';\ndotenv.config();\nimport * as passport from 'passport';\nimport '@yak-twitter-app/server/passport';\nimport * as MongoDBStore from 'connect-mongodb-session';\nimport * as session from 'express-session';\n\nimport { searchHashtagRoute } from '@yak-twitter-app/server-routes-search-hashtag';\nimport { authRoute } from '@yak-twitter-app/server/routes/auth';\nimport { errorMiddleware } from '@yak-twitter-app/server-middlewares-error';\nimport { IUser } from '@yak-twitter-app/types';\n\nconst app = express();\n\nconst mongoDbStore = MongoDBStore(session);\n\nconst store =\n  process.env.NODE_ENV !== 'test'\n    ? new mongoDbStore({\n        uri: process.env.DB_URI,\n        collection: 'session',\n      })\n    : undefined;\napp.use(\n  session({\n    secret: 'thisIsASecret',\n    cookie: {\n      maxAge: 1000 * 60 * 60 * 24, //one day\n    },\n    resave: false,\n    saveUninitialized: true,\n    store,\n  })\n);\n\napp.use(passport.initialize());\napp.use(passport.session());\n\napp.use(authRoute);\n\nfunction isLoggedInMiddleware(req, res, next) {\n  if (process.env.NODE_ENV === 'test') return next();\n  if (!req.isAuthenticated()) {\n    return res.status(403).end();\n  }\n  next();\n}\n\napp.use('/api/search/hashtag', isLoggedInMiddleware, searchHashtagRoute);\n\napp.use(express.static(path.resolve(__dirname, 'assets', 'public')));\napp.get('/', (req, res) => {\n  if (req.isAuthenticated()) {\n    return res.redirect('/dashboard');\n  }\n  res.sendFile(path.resolve(__dirname, 'assets', 'index.html'));\n});\n\napp.use(express.static(path.resolve(__dirname, '..', 'dashboard')));\n\napp.get('/dashboard', (req, res) => {\n  if (!req.isAuthenticated()) {\n    return res.redirect('/');\n  }\n  const user = req.user as IUser;\n  res.cookie('user_avatar_url', user.profile?.photos?.[0].value);\n  res.sendFile(path.resolve(__dirname, '..', 'dashboard', 'index.html'));\n});\n\napp.use(errorMiddleware);\n\nexport { app };\n","export * from './lib/controllers-twitter-search';\nexport * from './lib/twitter_client';\n","import { NextFunction, Request, Response } from 'express';\nimport {\n  getTweetsStats,\n  getMostEngagedTweets,\n  getRankedAccounts,\n} from '@yak-twitter-app/utility/tweets';\nimport { getTwitterApiClient } from './twitter_client';\nimport { sleep } from '@yak-twitter-app/utility/helpers';\nimport { IUser, SearchHashtagReturnData } from '@yak-twitter-app/types';\n\n//TODO: compress  the response\ntype IRequest = Request<\n  { hashtag: string },\n  unknown,\n  unknown,\n  { startTime?: string; endTime?: string }\n>;\nexport type SearchRequest = IRequest & { user: IUser };\n\nexport async function searchByHashtag(\n  req: SearchRequest,\n  res: Response,\n  next: NextFunction\n) {\n  const { hashtag } = req.params;\n  const { startTime, endTime } = req.query;\n\n  const maxResultsPerPage = 100; // between 10 and 100\n  // handle client cancle request\n  let cancelRequest = false;\n  req.on('close', () => {\n    if (req.aborted) {\n      cancelRequest = true;\n      console.log('request aborted by the client');\n    }\n  });\n  const user = (req.user || {}) as IUser;\n\n  try {\n    const client = getTwitterApiClient(user.token, user.tokenSecret);\n    let result = await client.v2.search(`#${hashtag} lang:en`, {\n      max_results: maxResultsPerPage,\n      start_time: startTime,\n      end_time: endTime,\n      expansions: ['author_id', 'referenced_tweets.id'],\n      'tweet.fields': [\n        'id',\n        'author_id',\n        'in_reply_to_user_id',\n        'created_at',\n        'public_metrics',\n      ],\n\n      'user.fields': ['username', 'public_metrics'],\n    });\n    do {\n      const response: SearchHashtagReturnData = {\n        ...getTweetsStats(result.tweets),\n        rateLimit: {\n          ...result.rateLimit,\n          reset: result.rateLimit.reset * 1000, // convert seconds to milliseconds\n        },\n        rankedAccounts: getRankedAccounts(result.includes.users),\n        mostEngagedTweets: getMostEngagedTweets(result.tweets),\n        chartData: result.tweets.map((tweet) => tweet.created_at),\n      };\n      res.write(JSON.stringify(response));\n      // if rate limit exceeded, wait untill time reset\n      if (result.rateLimit.remaining === 0) {\n        const sleeptime = result.rateLimit.reset * 1000 - Date.now();\n        await sleep(sleeptime);\n      }\n      if (!result.done) {\n        result = await result.next(); // fetch the next page\n      }\n    } while (!result.done && !cancelRequest);\n\n    // call res.end to close the connection\n    return res.end();\n  } catch (error) {\n    // console.error(error);\n    return next(error);\n  }\n}\n","import { TwitterApi } from 'twitter-api-v2';\n\nexport function getTwitterApiClient(accessToken: string, accessSecret: string) {\n  let twitterApiClient: TwitterApi;\n\n  if (process.env.NODE_ENV === 'test') {\n    twitterApiClient = new TwitterApi(process.env.TWITTER_API_CLIENT);\n  } else {\n    twitterApiClient = new TwitterApi({\n      appKey: process.env.TWITTER_CONSUMER_KEY,\n      appSecret: process.env.TWITTER_CONSUMER_SECRET,\n      accessToken,\n      accessSecret,\n    });\n  }\n\n  return twitterApiClient;\n}\n","export * from './lib/server-db';\n","import { connect } from 'mongoose';\n\nconnect(process.env.DB_URI, (err) => {\n  if (err) {\n    return console.error(err);\n  }\n  console.log('mongoose is connected to: ', process.env.DB_URI);\n});\n","export * from './lib/middlewares-error';\n","import { HeadersSentErrorMessaage } from '@yak-twitter-app/types';\nimport { Request, Response, NextFunction } from 'express';\nimport { ApiResponseError, ApiRequestError } from 'twitter-api-v2';\n\nconst headersSentErrorMessaage: HeadersSentErrorMessaage = {\n  error_streaming: true,\n};\n\nexport function errorMiddleware(\n  error: Error,\n  req: Request,\n  res: Response,\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  next: NextFunction\n) {\n  if (res.headersSent) {\n    return res.end(JSON.stringify(headersSentErrorMessaage));\n  }\n  if (error instanceof ApiRequestError) {\n    // console.log('api request error');\n    // console.log(error.toJSON());\n    return res.sendStatus(400);\n  }\n\n  if (error instanceof ApiResponseError) {\n    // console.log('api response error');\n    // console.log(error.data, error.code);\n    return res.status(error.code).json(error.data);\n  }\n  return res.sendStatus(500);\n}\n","export * from './lib/server-models-user';\n","import { IUser } from '@yak-twitter-app/types';\nimport { Schema, model } from 'mongoose';\n\nconst userSchema = new Schema<IUser>({\n  twitterId: String,\n  profile: {},\n  token: String,\n  tokenSecret: String,\n});\n\nexport const User = model('User', userSchema);\n","export * from './lib/server-passport';\n","import * as passport from 'passport';\nimport * as TwitterStrategy from 'passport-twitter';\nimport { User } from '@yak-twitter-app/server/models/user';\nimport { IUser } from '@yak-twitter-app/types';\n\n// twitter strategy\npassport.use(\n  new TwitterStrategy.Strategy(\n    {\n      consumerKey: process.env.TWITTER_CONSUMER_KEY,\n      consumerSecret: process.env.TWITTER_CONSUMER_SECRET,\n      callbackURL: 'http://localhost:3333/auth/twitter/callback',\n    },\n    function (token, tokenSecret, profile, cb) {\n      // console.log('twitter profile =', profile)\n      // console.log('token *=', token);\n      // console.log('secret =', tokenSecret);\n      const update = {\n        twitterId: profile.id,\n        profile,\n        token,\n        tokenSecret,\n      };\n      User.findOneAndUpdate(\n        { twitterId: profile.id },\n        update,\n        { upsert: true, new: true, useFindAndModify: false },\n        function (err, user) {\n          return cb(err, user);\n        }\n      );\n    }\n  )\n);\n// export default function () {\npassport.serializeUser((user: IUser, done) => {\n  done(null, user.twitterId);\n});\npassport.deserializeUser((id, done) => {\n  User.findOne({ twitterId: id }, (err, user) => {\n    if (err) return done(err);\n    done(null, user);\n  });\n});\n// }\n","export { default as authRoute } from './lib/server-routes-auth';\n","import * as express from 'express';\nimport * as passport from 'passport';\n\nconst router = express.Router();\n\nrouter.get('/auth/twitter', passport.authenticate('twitter'));\n\nrouter.get(\n  '/auth/twitter/callback',\n  passport.authenticate('twitter', {\n    failureRedirect: '/',\n    successRedirect: '/',\n  })\n);\n\nrouter.get('/auth/logout', (req, res, next) => {\n  req.logout(function (err) {\n    if (err) {\n      return next(err);\n    }\n    res.redirect('/');\n  });\n});\n\nexport default router;\n","export { default as searchHashtagRoute } from './lib/routes-search-hashtag';\n","import { Router, Response, NextFunction } from 'express';\n\nimport {\n  searchByHashtag,\n  SearchRequest,\n} from '@yak-twitter-app/server-controllers-twitter-search';\n\nconst route = Router();\n\nroute.get(\n  '/:hashtag',\n  (req: SearchRequest, res: Response, next: NextFunction) => {\n    searchByHashtag(req, res, next);\n  }\n);\n\nexport default route;\n","export * from './lib/utility-helpers';\n","// this function is for combining css classes\nexport function clsx(...args: string[]) {\n  return args.join(' ').trim();\n}\n\nexport function sleep(ms: number) {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\nexport function isValidJSON(json: string) {\n  try {\n    JSON.parse(json);\n    return true;\n  } catch (error) {\n    return false;\n  }\n}\n\nexport function getCookieValue(cookie: string): string | undefined {\n  // from MDN\n  return window.document.cookie\n    .split('; ')\n    .find((row) => row.startsWith(`${cookie}=`))\n    ?.split('=')[1];\n}\n","export * from './lib/utility-tweets';\n","import { TweetsStats } from '@yak-twitter-app/types';\nimport { TweetV2, UserV2 } from 'twitter-api-v2';\n\nexport function getTweetsStats(tweets: TweetV2[]) {\n  return tweets.reduce(\n    (acc: TweetsStats, tweet) => {\n      if (tweet.in_reply_to_user_id) {\n        acc.replay += 1;\n      } else if (tweet.text.startsWith('RT')) {\n        acc.retweet += 1;\n      } else {\n        acc.original += 1;\n      }\n      return acc;\n    },\n    {\n      original: 0,\n      replay: 0,\n      retweet: 0,\n    }\n  );\n}\n\nexport function getRankedAccounts(users: Array<UserV2>, maxResult = 6) {\n  return users\n    .filter((user, i, arr) => i === arr.findIndex((el) => el.id === user.id))\n    .sort((a, b) => {\n      if (!a.public_metrics?.followers_count) {\n        return 1;\n      }\n      if (!b.public_metrics?.followers_count) {\n        return -1;\n      }\n      return (\n        b.public_metrics.followers_count - a.public_metrics.followers_count\n      );\n    })\n    .slice(0, maxResult);\n}\n\nexport function getMostEngagedTweets(tweets: Array<TweetV2>, maxResult = 6) {\n  // console.log('get most engaged tweets', { tweets });\n  const hashSet = new Set();\n  const result: Array<{ count: number; tweet: TweetV2 }> = [];\n  for (const tweet of tweets) {\n    const tweetId = tweet.referenced_tweets\n      ? tweet.referenced_tweets[0].id\n      : tweet.id;\n    if (!hashSet.has(tweetId)) {\n      hashSet.add(tweetId);\n      const count =\n        (tweet.public_metrics?.like_count || 0) +\n        (tweet.public_metrics?.reply_count || 0) +\n        (tweet.public_metrics?.retweet_count || 0);\n      result.push({\n        tweet: tweet.referenced_tweets\n          ? {\n              ...tweet,\n              id: tweetId,\n              in_reply_to_user_id: undefined,\n              referenced_tweets: undefined,\n            }\n          : tweet,\n        count,\n      });\n    }\n  }\n  result.sort((a, b) => b.count - a.count);\n  return result.map(({ tweet }) => tweet).slice(0, maxResult);\n}\n","module.exports = require(\"connect-mongodb-session\");","module.exports = require(\"dotenv\");","module.exports = require(\"express\");","module.exports = require(\"express-session\");","module.exports = require(\"mongoose\");","module.exports = require(\"passport\");","module.exports = require(\"passport-twitter\");","module.exports = require(\"tslib\");","module.exports = require(\"twitter-api-v2\");","module.exports = require(\"path\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import * as dotenv from 'dotenv';\ndotenv.config();\nimport '@yak-twitter-app/server/db';\nimport { app } from '@yak-twitter-app/server/app';\n\nconst port = process.env.PORT || 3333;\n\nconst server = app.listen(port, () =>\n  console.log(`server is running on http://localhost:${port}/api`)\n);\nserver.on('error', console.error);\n"],"names":[],"sourceRoot":""}